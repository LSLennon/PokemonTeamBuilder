@inject ISnackbar Snackbar

<MudTable Items="@MoveList"
          T="MPokemonToMoves"
          OnRowClick="OnRowClick"
          SortLabel="Sort By"
          Dense="true"
          >
    <ToolBarContent>
        <MudText Typo="Typo.h6">@TableType</MudText>
    </ToolBarContent>
    <HeaderContent>
        @if (TableType == "Level-Up Moves")
        {
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<MPokemonToMoves, object>(x=>x.Level)">Level</MudTableSortLabel></MudTh>
        }
        else if (TableType == "Machine Moves")
        {
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<MPokemonToMoves, object>(x=>x.PokeMove.MachineName)">Machine</MudTableSortLabel></MudTh>
        }
        else if (TableType == "Egg Moves")
        {
            <MudTh>Egg</MudTh>
        }
        <MudTh><MudTableSortLabel SortBy="new Func<MPokemonToMoves, object>(x=>x.PokeMove.MoveName)">Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<MPokemonToMoves, object>(x=>x.PokeMove.MoveType.PokeTypeName)">Type</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<MPokemonToMoves, object>(x=>x.PokeMove.DamgeClass)">Catagory</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<MPokemonToMoves, object>(x=>x.PokeMove.Power)">Power</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<MPokemonToMoves, object>(x=>x.PokeMove.PP)">PP</MudTableSortLabel></MudTh>
        <MudTh>Flavour Text</MudTh>

    </HeaderContent>
    <RowTemplate >
        @if (TableType == "Level-Up Moves")
        {
            <MudTd DataLabel="Level">@context.Level</MudTd>
        }
        else if (TableType == "Machine Moves")
        {
            <MudTd DataLabel="Machine Moves">@context.PokeMove.MachineName</MudTd>
        }
        else if (TableType == "Egg Moves")
        {
            <MudTd DataLabel="Egg"><MudIcon Icon="@Icons.Material.Filled.Egg" Title="Egg"></MudIcon></MudTd>
        }

        <MudTd DataLabel="Name">@context.PokeMove.MoveName</MudTd>
        <MudTd DataLabel="Type"><TypeDisplay Text="@context.PokeMove.MoveType.PokeTypeName" /></MudTd>
        <MudTd DataLabel="Catagory">@context.PokeMove.DamgeClass</MudTd>
        <MudTd DataLabel="Power">@context.PokeMove.Power</MudTd>
        <MudTd DataLabel="PP">@context.PokeMove.PP</MudTd>
        <MudTd DataLabel="Flavour Text">@context.PokeMove.FlavourText</MudTd>
    </RowTemplate>
</MudTable>

@code {
    [Parameter]
    public List<MPokemonToMoves> MoveList { get; set; }

    [Parameter]
    public string TableType { get; set; }

    [Parameter]
    public bool IsCustom { get; set; }

    [Parameter]
    public EventCallback<MPokemonToMoves> OnMoveAdded { get; set; }

    private async void OnRowClick(TableRowClickEventArgs<MPokemonToMoves> args)
    {
        await OnMoveAdded.InvokeAsync(args.Item);
    }
}
}
