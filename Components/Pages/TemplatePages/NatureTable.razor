@inject ISnackbar Snackbar

<MudTable Items="@NatureList"
          T="PokeNature"
          OnRowClick="OnRowClick"
          SortLabel="Sort By"
          Dense="true">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Nature</MudText>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<PokeNature, object>(x=>x.NatureName)">Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<PokeNature, object>(x=>x.Attack)">Attack</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<PokeNature, object>(x=>x.Defence)">Defence</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<PokeNature, object>(x=>x.SpAttack)">SpAttack</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<PokeNature, object>(x=>x.SpDefence)">SpDefence</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<PokeNature, object>(x=>x.Speed)">Speed</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.NatureName</MudTd>
        <MudTd DataLabel="Type" Style=""><MudIcon Icon="@ReturnIcon(context.Attack)" Style="@GetIconStyle(context.Attack)" /></MudTd>
        <MudTd DataLabel="Type" Style=""><MudIcon Icon="@ReturnIcon(context.Defence)" Style="@GetIconStyle(context.Defence)" /></MudTd>
        <MudTd DataLabel="Type" Style=""><MudIcon Icon="@ReturnIcon(context.SpAttack)" Style="@GetIconStyle(context.SpAttack)" /></MudTd>
        <MudTd DataLabel="Type" Style=""><MudIcon Icon="@ReturnIcon(context.SpDefence)" Style="@GetIconStyle(context.SpDefence)" /></MudTd>
        <MudTd DataLabel="Type" Style=""><MudIcon Icon="@ReturnIcon(context.Speed)" Style="@GetIconStyle(context.Speed)" /></MudTd>
    </RowTemplate>
</MudTable>

@code {
    [Parameter]
    public List<PokeNature> NatureList { get; set; }

    [Parameter]
    public EventCallback<PokeNature> OnNatureAdded { get; set; }

    private async void OnRowClick(TableRowClickEventArgs<PokeNature> args)
    {
        await OnNatureAdded.InvokeAsync(args.Item);
    }

    private string ReturnIcon(double stat)
    {
        if (stat == 0.9)
        {
            return Icons.Material.Filled.ArrowDownward;
        }
        else if (stat == 1.1)
        {
            return Icons.Material.Filled.ArrowUpward;
        }
        else
        {
            return Icons.Material.Filled.Remove;
        }
    }

    private string GetIconStyle(double stat)
    {
        if (stat == 0.9)
        {
            return "color: red;";
        }
        else if (stat == 1.1)
        {
            return "color: green;";
        }
        else
        {
            return "color: orange;";
        }
    }
}

