@inject PokemonServices PokeService
@inject NavigationManager NavigationManager
@inject PokemonApiService PokeApi

@page "/{OnePokemon}"

@if (isReady)
{
    @basePokemon.PokemonName
    <br />
    @basePokemon.PokedexEntry
    <br />
    @basePokemon.Sprites[0].Url
    <br />
    @basePokemon.Types[0].PokeTypeName
    <br />
    @basePokemon.Height <p>cm</p>
    <br />
    @basePokemon.Weight <p>grams</p>
    <br />
    @basePokemon.Abilities[0].AbilityDescription
    <br />
    @basePokemon.Abilities[0].AbilityName
    <br />
    @basePokemon.Stats[0].Attack
}


@code {
    [Parameter]
    public string OnePokemon { get; set; }

    BasePokemon basePokemon = new BasePokemon();
    List<PokeType> allTypes = new List<PokeType>();

    bool isReady = false;

    protected override async Task OnInitializedAsync()
    {
        allTypes = await PokeService.GetTypeList();
        basePokemon = await PokeApi.GetPokemon(OnePokemon, allTypes);
        isReady = true;
        StateHasChanged();
    }
}
