// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonTeamBuilder.Data;

#nullable disable

namespace PokemonTeamBuilder.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241119132156_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.BasePokemonSubClasses.Stats", b =>
                {
                    b.Property<string>("StatsId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Attack")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpAttack")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpDefence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("StatsId");

                    b.ToTable("stats");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.CustomPokemon", b =>
                {
                    b.Property<string>("CustomPokemonId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BasePokemonId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomPokemonAbility")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomPokemonEVsId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomPokemonHeldItem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomPokemonIVsId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomPokemonLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomPokemonMoves")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomPokemonNickname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserTeamId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CustomPokemonId");

                    b.HasIndex("CustomPokemonEVsId")
                        .IsUnique();

                    b.HasIndex("CustomPokemonIVsId")
                        .IsUnique();

                    b.HasIndex("UserTeamId");

                    b.ToTable("CustomPokemons");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.UserTeam", b =>
                {
                    b.Property<string>("UserTeamId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserTeamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserTeamId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTeams");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.CustomPokemon", b =>
                {
                    b.HasOne("PokemonTeamBuilder.Components.Classes.BasePokemonSubClasses.Stats", "CustomPokemonEVs")
                        .WithOne()
                        .HasForeignKey("PokemonTeamBuilder.Components.Classes.CustomPokemon", "CustomPokemonEVsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonTeamBuilder.Components.Classes.BasePokemonSubClasses.Stats", "CustomPokemonIVs")
                        .WithOne()
                        .HasForeignKey("PokemonTeamBuilder.Components.Classes.CustomPokemon", "CustomPokemonIVsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonTeamBuilder.Components.Classes.UserTeam", "UserTeam")
                        .WithMany("CustomPokemons")
                        .HasForeignKey("UserTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomPokemonEVs");

                    b.Navigation("CustomPokemonIVs");

                    b.Navigation("UserTeam");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.UserTeam", b =>
                {
                    b.HasOne("PokemonTeamBuilder.Components.Classes.User", "User")
                        .WithMany("UserTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.User", b =>
                {
                    b.Navigation("UserTeams");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.UserTeam", b =>
                {
                    b.Navigation("CustomPokemons");
                });
#pragma warning restore 612, 618
        }
    }
}
