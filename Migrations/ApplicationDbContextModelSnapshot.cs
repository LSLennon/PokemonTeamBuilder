// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonTeamBuilder.Data;

#nullable disable

namespace PokemonTeamBuilder.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.DatabaseClasses.AppStats", b =>
                {
                    b.Property<int>("AppStatsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Attack")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpAttack")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpDefence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("AppStatsId");

                    b.ToTable("stats");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.DatabaseClasses.CustomPokemon", b =>
                {
                    b.Property<int>("CustomPokemonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BasePokemonId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomPokemonAbility")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomPokemonEVsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomPokemonHeldItem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomPokemonIVsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomPokemonLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomPokemonMoves")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomPokemonNickname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserTeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CustomPokemonId");

                    b.HasIndex("CustomPokemonEVsId");

                    b.HasIndex("CustomPokemonIVsId");

                    b.HasIndex("UserTeamId");

                    b.ToTable("CustomPokemons");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.DatabaseClasses.PokeType", b =>
                {
                    b.Property<int>("PokeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PokeTypeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PokeTypeId");

                    b.ToTable("PokeTypes");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.DatabaseClasses.PokedexPokemon", b =>
                {
                    b.Property<string>("PokedexPokemonId")
                        .HasColumnType("TEXT");

                    b.Property<int>("DefenceType1PokeTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DefenceType2PokeTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PokemonName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PokedexPokemonId");

                    b.HasIndex("DefenceType1PokeTypeId");

                    b.HasIndex("DefenceType2PokeTypeId");

                    b.ToTable("PokedexPokemons");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.DatabaseClasses.TypeEffectiveness", b =>
                {
                    b.Property<int>("TypeEffectivnessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttackTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("DamageCalculation")
                        .HasColumnType("REAL");

                    b.Property<int>("DefenceTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TypeEffectivnessId");

                    b.HasIndex("AttackTypeId");

                    b.HasIndex("DefenceTypeId");

                    b.ToTable("EffectivenessTypes");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.DatabaseClasses.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.DatabaseClasses.UserTeam", b =>
                {
                    b.Property<int>("UserTeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserTeamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserTeamId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTeams");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.DatabaseClasses.CustomPokemon", b =>
                {
                    b.HasOne("PokemonTeamBuilder.Components.Classes.DatabaseClasses.AppStats", "CustomPokemonEVs")
                        .WithMany()
                        .HasForeignKey("CustomPokemonEVsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonTeamBuilder.Components.Classes.DatabaseClasses.AppStats", "CustomPokemonIVs")
                        .WithMany()
                        .HasForeignKey("CustomPokemonIVsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonTeamBuilder.Components.Classes.DatabaseClasses.UserTeam", "UserTeam")
                        .WithMany("CustomPokemons")
                        .HasForeignKey("UserTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomPokemonEVs");

                    b.Navigation("CustomPokemonIVs");

                    b.Navigation("UserTeam");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.DatabaseClasses.PokedexPokemon", b =>
                {
                    b.HasOne("PokemonTeamBuilder.Components.Classes.DatabaseClasses.PokeType", "DefenceType1")
                        .WithMany()
                        .HasForeignKey("DefenceType1PokeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonTeamBuilder.Components.Classes.DatabaseClasses.PokeType", "DefenceType2")
                        .WithMany()
                        .HasForeignKey("DefenceType2PokeTypeId");

                    b.Navigation("DefenceType1");

                    b.Navigation("DefenceType2");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.DatabaseClasses.TypeEffectiveness", b =>
                {
                    b.HasOne("PokemonTeamBuilder.Components.Classes.DatabaseClasses.PokeType", "AttackType")
                        .WithMany("AttackEffectiveness")
                        .HasForeignKey("AttackTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonTeamBuilder.Components.Classes.DatabaseClasses.PokeType", "DefenceType")
                        .WithMany("DefenceEffectiveness")
                        .HasForeignKey("DefenceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttackType");

                    b.Navigation("DefenceType");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.DatabaseClasses.UserTeam", b =>
                {
                    b.HasOne("PokemonTeamBuilder.Components.Classes.DatabaseClasses.User", "User")
                        .WithMany("UserTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.DatabaseClasses.PokeType", b =>
                {
                    b.Navigation("AttackEffectiveness");

                    b.Navigation("DefenceEffectiveness");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.DatabaseClasses.User", b =>
                {
                    b.Navigation("UserTeams");
                });

            modelBuilder.Entity("PokemonTeamBuilder.Components.Classes.DatabaseClasses.UserTeam", b =>
                {
                    b.Navigation("CustomPokemons");
                });
#pragma warning restore 612, 618
        }
    }
}
